<?xml version="1.0"?>
<launch>
  <arg name="prefix" default="ur5e_"/>  

    <!-- load the UR5e ros controllers -->
    <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
          args="pub /calibrated std_msgs/Bool true" />
    <!-- joint_state_controller -->
    <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>
  
  <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find ur_e_gazebo)/controller/joint_state_controller.yaml" command="load" />
  <!-- <rosparam file="$(find summit_xl_control)/config/kinova/$(arg kinova_arm)_control.yaml" command="load"/> -->
 
  <!-- start this controller -->
  <rosparam file="$(find ur_e_gazebo)/controller/arm_controller_ur5e.yaml" command="load" subst_value="True"/>
  <node name="arm_controller_spawner" pkg="controller_manager"
        type="controller_manager"
        args="spawn arm_controller gripper_controller"
        respawn="false" output="screen"/>

  <!-- load other controllers -->
  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" />

  <!-- convert joint states to TF transforms for rviz, etc -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" -->
  <!--       respawn="false" output="screen">     -->
  <!--   <remap from="/joint_states" to="/$(arg ns)/joint_states"/>     -->
  <!-- </node> -->
  
  <!--node name="command_robot_home_pose" pkg="kinova_control" type="move_robot.py"
        respawn="false" output="screen" args="$(arg kinova_arm)">       
  </node-->
 
</launch>
