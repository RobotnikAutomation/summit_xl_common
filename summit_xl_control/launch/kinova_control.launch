<?xml version="1.0"?>
<launch>
  <arg name="prefix" default="robot_"/>
  <arg name="arm_model" default="j2s7s300"/>
  <arg name="arm_prefix" default="$(arg prefix)$(arg arm_model)"/>
  <arg name="use_trajectory_controller" default="true"/>
  <arg name="is7dof" default="false"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find summit_xl_control)/config/kinova/$(arg arm_model)_control.yaml" command="load"/>

  <group unless="$(arg use_trajectory_controller)">
      <group unless="$(eval arg('arm_model') == 'j2s7s300')">
      <!-- load the joint by joint position controllers -->
      <node
        name="$(arg arm_prefix)_joints_controller"
        pkg="controller_manager"
        type="spawner"
        respawn="false"
        output="screen"
        args="
          joint_1_position_controller
          joint_2_position_controller
          joint_3_position_controller
          joint_4_position_controller
          joint_5_position_controller
          joint_6_position_controller
          finger_2_position_controller
          finger_1_position_controller
          finger_3_position_controller
          finger_tip_1_position_controller
          finger_tip_2_position_controller
          finger_tip_3_position_controller
          joint_state_controller
        "
      />
    </group>
    <group if="$(eval arg('arm_model') == 'j2s6s300')">
      <!-- load the joint by joint position controllers -->
      <node
        name="$(arg arm_prefix)_joints_controller"
        pkg="controller_manager"
        type="spawner"
        respawn="false"
        output="screen"
        args="
          joint_1_position_controller
          joint_2_position_controller
          joint_3_position_controller
          joint_4_position_controller
          joint_5_position_controller
          joint_6_position_controller
          joint_7_position_controller
          finger_2_position_controller
          finger_1_position_controller
          finger_3_position_controller
          joint_state_controller
        "
      />
    </group>
  </group>

  <group if="$(arg use_trajectory_controller)">
    <!-- Effort Joint trajectory controller-->
    <node
      name="$(arg arm_prefix)_trajectory_controller"
      pkg="controller_manager"
      type="spawner"
      output="screen"
      args="
        effort_joint_trajectory_controller
        effort_finger_trajectory_controller
        finger_tip_1_position_controller
        finger_tip_2_position_controller
        finger_tip_3_position_controller
        joint_state_controller
      "
    />
  </group>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
    <remap from="/joint_states" to="/$(arg kinova_robotName)/joint_states"/>
  </node-->

  <!--node name="command_robot_home_pose" pkg="kinova_control" type="move_robot.py"
        respawn="false" output="screen" args="$(arg kinova_arm)">
  </node-->

</launch>
